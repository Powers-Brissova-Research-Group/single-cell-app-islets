shiny::runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
# load data----
load("DATA/Islets2.Rda")
# extract Gene description
library(readr)
ref<-read_tsv("DATA/refdata-cellranger-GRCh38-1.2.0/Homo_sapiens.GRCh38.84_gene_annotation_table.txt")
# fetch gene id info from biomart
library(biomaRt)
mart <- useEnsembl(biomart = "ensembl",
host = "uswest.ensembl.org",
dataset = "hsapiens_gene_ensembl",
version = "80")
genemap <- getBM( attributes = c("ensembl_gene_id",'hgnc_symbol', "description",'gene_biotype', 'chromosome_name', 'start_position', 'end_position'),
filters = "ensembl_gene_id",
values = ref$gene_id,
mart = mart,
useCache = FALSE)
# bind the seurat data back to original GRC38 genes, NOT biomart
idx <- match( rownames(Islets), ref$GeneSymbol)
Islets_ensembl <- ref[ idx, ]
# now, bind the biomart data
idx2 <- match( Islets_ensembl$gene_id, genemap$ensembl_gene_id)
Islets_ensembl <- genemap[ idx2, ]
Islets_ensembl2<-Islets_ensembl %>% top_n(10)
library(dplyr)
Islets_ensembl2<-Islets_ensembl %>% top_n(10)
#Islets_ensembl2$hgnc_symbol <- ifelse(Islets_ensembl2$hgnc_symbol == "", "no symbol available", Islets_ensembl2$hgnc_symbol)
#Islets_ensembl2 <- Islets_ensembl %>% filter(!hgnc_symbol == "")
Islets_ensembl2 <- Islets_ensembl2 %>% arrange(hgnc_symbol)
write.csv(Islets_ensembl2, "DATA/gene_annotation_sorted2.csv",row.names=FALSE)
shiny::runApp()
View(Islets_ensembl2)
Islets_ensembl2<-Islets_ensembl %>% top_n(10)
Islets_ensembl2$hgnc_symbol <- ifelse(Islets_ensembl2$hgnc_symbol == "", "no symbol available", Islets_ensembl2$hgnc_symbol)
#Islets_ensembl2 <- Islets_ensembl %>% filter(!hgnc_symbol == "")
Islets_ensembl2 <- Islets_ensembl2 %>% arrange(hgnc_symbol)
write.csv(Islets_ensembl2, "DATA/gene_annotation_sorted2.csv",row.names=FALSE)
runApp()
Islets_ensembl2<-Islets_ensembl %>% top_n(100)
View(Islets_ensembl2)
#Islets_ensembl2 <- Islets_ensembl %>% filter(!hgnc_symbol == "")
Islets_ensembl2 <- Islets_ensembl2 %>% arrange(hgnc_symbol)
View(Islets_ensembl2)
write.csv(Islets_ensembl2, "DATA/gene_annotation_sorted2.csv",row.names=FALSE)
runApp()
Islets_ensembl2<-Islets_ensembl %>% top_n(1000)
#Islets_ensembl2 <- Islets_ensembl %>% filter(!hgnc_symbol == "")
Islets_ensembl2 <- Islets_ensembl2 %>% arrange(hgnc_symbol)
write.csv(Islets_ensembl2, "DATA/gene_annotation_sorted2.csv",row.names=FALSE)
runApp()
View(Islets_ensembl2)
Islets_ensembl2<-Islets_ensembl %>% top_n(10000)
#Islets_ensembl2 <- Islets_ensembl %>% filter(!hgnc_symbol == "")
Islets_ensembl2 <- Islets_ensembl2 %>% arrange(hgnc_symbol)
write.csv(Islets_ensembl2, "DATA/gene_annotation_sorted2.csv",row.names=FALSE)
runApp()
Islets_ensembl2<-Islets_ensembl %>% top_n(10000)
#default goes to home tab only when at least one hgnc symbol is empty. so replacing empty symbol with ensembl or any other filler does not work
Islets_ensembl2$hgnc_symbol <- ifelse(Islets_ensembl2$hgnc_symbol == "", "no symbol available", Islets_ensembl2$hgnc_symbol)
View(Islets_ensembl2)
Islets_ensembl2$hgnc_symbol<- ifelse(Islets_ensembl2$ensembl_gene_id=="ENSG00000273338","",Islets_ensembl2$hgnc_symbol)
write.csv(Islets_ensembl2, "DATA/gene_annotation_sorted2.csv",row.names=FALSE)
runApp()
# bind the seurat data back to original GRC38 genes, NOT biomart
idx <- match( rownames(Islets), ref$GeneSymbol)
Islets_ensembl <- ref[ idx, ]
# now, bind the biomart data
idx2 <- match( Islets_ensembl$gene_id, genemap$ensembl_gene_id)
Islets_ensembl <- genemap[ idx2, ]
# and sort by gene symbol
Islets_ensembl <- Islets_ensembl %>% arrange(hgnc_symbol)
# fill in empty symbols with ensemblID
#Islets_ensembl$hgnc_symbol <- ifelse(Islets_ensembl$hgnc_symbol == "", Islets_ensembl$ensembl_gene_id, Islets_ensembl$hgnc_symbol)
Islets_ensembl$hgnc_symbol <- ifelse(Islets_ensembl$hgnc_symbol == "", "no symbol available", Islets_ensembl$hgnc_symbol)
#leave at least one empty hgnc
Islets_ensembl2$hgnc_symbol<- ifelse(Islets_ensembl2$ensembl_gene_id=="ENSG00000273338","",Islets_ensembl2$hgnc_symbol)
write.csv(Islets_ensembl2, "DATA/gene_annotation_sorted2.csv",row.names=FALSE)
write.csv(Islets_ensembl, "DATA/gene_annotation_sorted2.csv",row.names=FALSE)
# bind the seurat data back to original GRC38 genes, NOT biomart
idx <- match( rownames(Islets), ref$GeneSymbol)
Islets_ensembl <- ref[ idx, ]
# now, bind the biomart data
idx2 <- match( Islets_ensembl$gene_id, genemap$ensembl_gene_id)
Islets_ensembl <- genemap[ idx2, ]
# and sort by gene symbol
Islets_ensembl <- Islets_ensembl %>% arrange(hgnc_symbol)
# fill in empty symbols with ensemblID
#Islets_ensembl$hgnc_symbol <- ifelse(Islets_ensembl$hgnc_symbol == "", Islets_ensembl$ensembl_gene_id, Islets_ensembl$hgnc_symbol)
Islets_ensembl$hgnc_symbol <- ifelse(Islets_ensembl$hgnc_symbol == "", "no symbol available", Islets_ensembl$hgnc_symbol)
#leave at least one empty hgnc
Islets_ensembl$hgnc_symbol<- ifelse(Islets_ensembl$ensembl_gene_id=="ENSG00000273338","",Islets_ensembl$hgnc_symbol)
View(Islets_ensembl)
write.csv(Islets_ensembl, "DATA/gene_annotation_sorted2.csv",row.names=FALSE)
runApp()
